package app.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import lombok.Getter;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

public class Calculator {
    @Getter
    private JLabel calculator;
    @Getter
    private JLabel title;
    @Getter
    private JPanel polynomialsPanel;
    @Getter
    private JLabel firstPolynomial;
    @Getter
    private JLabel secondPolynomial;
    @Getter
    private JTextField firstPolynomialField;
    @Getter
    private JTextField secondPolynomialField;
    @Getter
    private JPanel polynomialCalculatorPanel;
    @Getter
    private JPanel operationsPanel;
    @Getter
    private JButton addBtn;
    @Getter
    private JButton substractBtn;
    @Getter
    private JButton multiplyBtn;
    @Getter
    private JButton divideBtn;
    @Getter
    private JPanel resultPanel;
    @Getter
    private JLabel resultLabel;
    @Getter
    private JButton deriveBtn;
    @Getter
    private JButton clearBtn;
    @Getter
    private JButton integrateBtn;
    @Getter
    private JTextPane showResultsPane;


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        polynomialCalculatorPanel = new JPanel();
        polynomialCalculatorPanel.setLayout(new GridLayoutManager(4, 2, new Insets(15, 10, 40, 15), -1, -1));
        polynomialCalculatorPanel.setBackground(new Color(-13855045));
        polynomialCalculatorPanel.setForeground(new Color(-13855045));
        calculator = new JLabel();
        calculator.setIcon(new ImageIcon(getClass().getResource("/calculator.png")));
        calculator.setText("");
        polynomialCalculatorPanel.add(calculator, new GridConstraints(1, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        title = new JLabel();
        Font titleFont = this.$$$getFont$$$("Castellar", Font.BOLD, 18, title.getFont());
        if (titleFont != null) title.setFont(titleFont);
        title.setForeground(new Color(-16777216));
        title.setHorizontalAlignment(0);
        title.setHorizontalTextPosition(0);
        title.setText("Polynomial Calculator");
        polynomialCalculatorPanel.add(title, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        polynomialsPanel = new JPanel();
        polynomialsPanel.setLayout(new GridLayoutManager(2, 2, new Insets(10, 0, 10, 10), -1, -1));
        polynomialsPanel.setBackground(new Color(-6390331));
        polynomialCalculatorPanel.add(polynomialsPanel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        firstPolynomial = new JLabel();
        Font firstPolynomialFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, 14, firstPolynomial.getFont());
        if (firstPolynomialFont != null) firstPolynomial.setFont(firstPolynomialFont);
        firstPolynomial.setForeground(new Color(-16777216));
        firstPolynomial.setText("First Polynimial");
        polynomialsPanel.add(firstPolynomial, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        secondPolynomial = new JLabel();
        Font secondPolynomialFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, 14, secondPolynomial.getFont());
        if (secondPolynomialFont != null) secondPolynomial.setFont(secondPolynomialFont);
        secondPolynomial.setForeground(new Color(-16777216));
        secondPolynomial.setText("Second Polynomial");
        polynomialsPanel.add(secondPolynomial, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        firstPolynomialField = new JTextField();
        firstPolynomialField.setBackground(new Color(-13855045));
        polynomialsPanel.add(firstPolynomialField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        secondPolynomialField = new JTextField();
        secondPolynomialField.setBackground(new Color(-13855045));
        polynomialsPanel.add(secondPolynomialField, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        operationsPanel = new JPanel();
        operationsPanel.setLayout(new GridLayoutManager(3, 2, new Insets(5, 5, 5, 5), -1, -1));
        operationsPanel.setBackground(new Color(-13855045));
        polynomialCalculatorPanel.add(operationsPanel, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        addBtn = new JButton();
        addBtn.setBackground(new Color(-6308366));
        Font addBtnFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, -1, addBtn.getFont());
        if (addBtnFont != null) addBtn.setFont(addBtnFont);
        addBtn.setForeground(new Color(-16777216));
        addBtn.setText("Add");
        operationsPanel.add(addBtn, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        substractBtn = new JButton();
        substractBtn.setBackground(new Color(-6308366));
        Font substractBtnFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, -1, substractBtn.getFont());
        if (substractBtnFont != null) substractBtn.setFont(substractBtnFont);
        substractBtn.setForeground(new Color(-16777216));
        substractBtn.setText("Substract");
        operationsPanel.add(substractBtn, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        multiplyBtn = new JButton();
        multiplyBtn.setBackground(new Color(-6308366));
        Font multiplyBtnFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, -1, multiplyBtn.getFont());
        if (multiplyBtnFont != null) multiplyBtn.setFont(multiplyBtnFont);
        multiplyBtn.setForeground(new Color(-16777216));
        multiplyBtn.setText("Multiply");
        operationsPanel.add(multiplyBtn, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        divideBtn = new JButton();
        divideBtn.setBackground(new Color(-6308366));
        Font divideBtnFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, -1, divideBtn.getFont());
        if (divideBtnFont != null) divideBtn.setFont(divideBtnFont);
        divideBtn.setForeground(new Color(-16777216));
        divideBtn.setText("Divide");
        operationsPanel.add(divideBtn, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deriveBtn = new JButton();
        deriveBtn.setBackground(new Color(-6308366));
        Font deriveBtnFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, -1, deriveBtn.getFont());
        if (deriveBtnFont != null) deriveBtn.setFont(deriveBtnFont);
        deriveBtn.setForeground(new Color(-16777216));
        deriveBtn.setText("Derive");
        operationsPanel.add(deriveBtn, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        integrateBtn = new JButton();
        integrateBtn.setBackground(new Color(-6308366));
        Font integrateBtnFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, -1, integrateBtn.getFont());
        if (integrateBtnFont != null) integrateBtn.setFont(integrateBtnFont);
        integrateBtn.setForeground(new Color(-16777216));
        integrateBtn.setText("Integrate");
        operationsPanel.add(integrateBtn, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        resultPanel = new JPanel();
        resultPanel.setLayout(new GridLayoutManager(1, 2, new Insets(10, 10, 10, 10), -1, -1));
        resultPanel.setBackground(new Color(-6390331));
        polynomialCalculatorPanel.add(resultPanel, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        resultLabel = new JLabel();
        Font resultLabelFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, 14, resultLabel.getFont());
        if (resultLabelFont != null) resultLabel.setFont(resultLabelFont);
        resultLabel.setForeground(new Color(-16777216));
        resultLabel.setText("Result:");
        resultPanel.add(resultLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showResultsPane = new JTextPane();
        showResultsPane.setBackground(new Color(-6390331));
        Font showResultsPaneFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, 16, showResultsPane.getFont());
        if (showResultsPaneFont != null) showResultsPane.setFont(showResultsPaneFont);
        showResultsPane.setForeground(new Color(-16777216));
        resultPanel.add(showResultsPane, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        clearBtn = new JButton();
        clearBtn.setBackground(new Color(-6308366));
        Font clearBtnFont = this.$$$getFont$$$("Cambria Math", Font.PLAIN, -1, clearBtn.getFont());
        if (clearBtnFont != null) clearBtn.setFont(clearBtnFont);
        clearBtn.setForeground(new Color(-16777216));
        clearBtn.setText("Clear");
        polynomialCalculatorPanel.add(clearBtn, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return polynomialCalculatorPanel;
    }

}
